
2-GPIO_Button_Input.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000194  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000328  08000330  00010330  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000328  08000328  00010330  2**0
                  CONTENTS
  4 .ARM          00000000  08000328  08000328  00010330  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000328  08000330  00010330  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000328  08000328  00010328  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800032c  0800032c  0001032c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010330  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000330  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000330  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010330  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0001035a  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000030f  00000000  00000000  0001039d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000000c9  00000000  00000000  000106ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  00010778  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000002d  00000000  00000000  000107c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000dab7  00000000  00000000  000107ed  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000660  00000000  00000000  0001e2a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0004ee31  00000000  00000000  0001e904  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000054  00000000  00000000  0006d738  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 000000aa  00000000  00000000  0006d78c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000310 	.word	0x08000310

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000310 	.word	0x08000310

080001d4 <main>:

//include library


int main(void)
{
 80001d4:	b480      	push	{r7}
 80001d6:	af00      	add	r7, sp, #0
	//RCC register - enabling GPIO port C pins 6 and 8
	RCC->AHB1ENR |=RCC_AHB1ENR_GPIOCEN;
 80001d8:	4b24      	ldr	r3, [pc, #144]	; (800026c <main+0x98>)
 80001da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001dc:	4a23      	ldr	r2, [pc, #140]	; (800026c <main+0x98>)
 80001de:	f043 0304 	orr.w	r3, r3, #4
 80001e2:	6313      	str	r3, [r2, #48]	; 0x30


	//setup control registers for LED output
	//MOde register for output

	GPIOC->MODER &=~(GPIO_MODER_MODE6_1);
 80001e4:	4b22      	ldr	r3, [pc, #136]	; (8000270 <main+0x9c>)
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	4a21      	ldr	r2, [pc, #132]	; (8000270 <main+0x9c>)
 80001ea:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80001ee:	6013      	str	r3, [r2, #0]
	GPIOC->MODER |=GPIO_MODER_MODE6_0;
 80001f0:	4b1f      	ldr	r3, [pc, #124]	; (8000270 <main+0x9c>)
 80001f2:	681b      	ldr	r3, [r3, #0]
 80001f4:	4a1e      	ldr	r2, [pc, #120]	; (8000270 <main+0x9c>)
 80001f6:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80001fa:	6013      	str	r3, [r2, #0]

	//Output Type register
	GPIOC->OTYPER &=~(GPIO_OTYPER_OT6);
 80001fc:	4b1c      	ldr	r3, [pc, #112]	; (8000270 <main+0x9c>)
 80001fe:	685b      	ldr	r3, [r3, #4]
 8000200:	4a1b      	ldr	r2, [pc, #108]	; (8000270 <main+0x9c>)
 8000202:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000206:	6053      	str	r3, [r2, #4]

	//Speed Register
	GPIOC->OSPEEDR &=~(GPIO_OSPEEDR_OSPEED6);
 8000208:	4b19      	ldr	r3, [pc, #100]	; (8000270 <main+0x9c>)
 800020a:	689b      	ldr	r3, [r3, #8]
 800020c:	4a18      	ldr	r2, [pc, #96]	; (8000270 <main+0x9c>)
 800020e:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8000212:	6093      	str	r3, [r2, #8]
	GPIOC->OSPEEDR |=GPIO_OSPEEDR_OSPEED6;
 8000214:	4b16      	ldr	r3, [pc, #88]	; (8000270 <main+0x9c>)
 8000216:	689b      	ldr	r3, [r3, #8]
 8000218:	4a15      	ldr	r2, [pc, #84]	; (8000270 <main+0x9c>)
 800021a:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 800021e:	6093      	str	r3, [r2, #8]

	//Pull up pull down register
	GPIOC->PUPDR &=~(GPIO_PUPDR_PUPDR6);
 8000220:	4b13      	ldr	r3, [pc, #76]	; (8000270 <main+0x9c>)
 8000222:	68db      	ldr	r3, [r3, #12]
 8000224:	4a12      	ldr	r2, [pc, #72]	; (8000270 <main+0x9c>)
 8000226:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800022a:	60d3      	str	r3, [r2, #12]

	//setup control registers for push button input
	//mode register for input
	GPIOC->MODER &=~(GPIO_MODER_MODER8);
 800022c:	4b10      	ldr	r3, [pc, #64]	; (8000270 <main+0x9c>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	4a0f      	ldr	r2, [pc, #60]	; (8000270 <main+0x9c>)
 8000232:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000236:	6013      	str	r3, [r2, #0]

	//Pull up pull down register
	GPIOC->PUPDR &=~(GPIO_PUPDR_PUPDR8);
 8000238:	4b0d      	ldr	r3, [pc, #52]	; (8000270 <main+0x9c>)
 800023a:	68db      	ldr	r3, [r3, #12]
 800023c:	4a0c      	ldr	r2, [pc, #48]	; (8000270 <main+0x9c>)
 800023e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000242:	60d3      	str	r3, [r2, #12]
    /* Loop forever */

	while(1)
	{

		if(GPIOC->IDR & GPIO_IDR_IDR_8)	//If the button is pressed (IDR-input data register)
 8000244:	4b0a      	ldr	r3, [pc, #40]	; (8000270 <main+0x9c>)
 8000246:	691b      	ldr	r3, [r3, #16]
 8000248:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800024c:	2b00      	cmp	r3, #0
 800024e:	d006      	beq.n	800025e <main+0x8a>
		{

			GPIOC->BSRR |=GPIO_BSRR_BS_6;	//turn ON LED (BSRR)
 8000250:	4b07      	ldr	r3, [pc, #28]	; (8000270 <main+0x9c>)
 8000252:	699b      	ldr	r3, [r3, #24]
 8000254:	4a06      	ldr	r2, [pc, #24]	; (8000270 <main+0x9c>)
 8000256:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800025a:	6193      	str	r3, [r2, #24]
 800025c:	e7f2      	b.n	8000244 <main+0x70>
		}

		else	//If the button is not pressed
		{
			GPIOC->BSRR |=GPIO_BSRR_BR_6;//turn OFF the LED  (BRR)
 800025e:	4b04      	ldr	r3, [pc, #16]	; (8000270 <main+0x9c>)
 8000260:	699b      	ldr	r3, [r3, #24]
 8000262:	4a03      	ldr	r2, [pc, #12]	; (8000270 <main+0x9c>)
 8000264:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000268:	6193      	str	r3, [r2, #24]
		if(GPIOC->IDR & GPIO_IDR_IDR_8)	//If the button is pressed (IDR-input data register)
 800026a:	e7eb      	b.n	8000244 <main+0x70>
 800026c:	40023800 	.word	0x40023800
 8000270:	40020800 	.word	0x40020800

08000274 <Reset_Handler>:
 8000274:	480d      	ldr	r0, [pc, #52]	; (80002ac <LoopForever+0x2>)
 8000276:	4685      	mov	sp, r0
 8000278:	f3af 8000 	nop.w
 800027c:	480c      	ldr	r0, [pc, #48]	; (80002b0 <LoopForever+0x6>)
 800027e:	490d      	ldr	r1, [pc, #52]	; (80002b4 <LoopForever+0xa>)
 8000280:	4a0d      	ldr	r2, [pc, #52]	; (80002b8 <LoopForever+0xe>)
 8000282:	2300      	movs	r3, #0
 8000284:	e002      	b.n	800028c <LoopCopyDataInit>

08000286 <CopyDataInit>:
 8000286:	58d4      	ldr	r4, [r2, r3]
 8000288:	50c4      	str	r4, [r0, r3]
 800028a:	3304      	adds	r3, #4

0800028c <LoopCopyDataInit>:
 800028c:	18c4      	adds	r4, r0, r3
 800028e:	428c      	cmp	r4, r1
 8000290:	d3f9      	bcc.n	8000286 <CopyDataInit>
 8000292:	4a0a      	ldr	r2, [pc, #40]	; (80002bc <LoopForever+0x12>)
 8000294:	4c0a      	ldr	r4, [pc, #40]	; (80002c0 <LoopForever+0x16>)
 8000296:	2300      	movs	r3, #0
 8000298:	e001      	b.n	800029e <LoopFillZerobss>

0800029a <FillZerobss>:
 800029a:	6013      	str	r3, [r2, #0]
 800029c:	3204      	adds	r2, #4

0800029e <LoopFillZerobss>:
 800029e:	42a2      	cmp	r2, r4
 80002a0:	d3fb      	bcc.n	800029a <FillZerobss>
 80002a2:	f000 f811 	bl	80002c8 <__libc_init_array>
 80002a6:	f7ff ff95 	bl	80001d4 <main>

080002aa <LoopForever>:
 80002aa:	e7fe      	b.n	80002aa <LoopForever>
 80002ac:	20018000 	.word	0x20018000
 80002b0:	20000000 	.word	0x20000000
 80002b4:	20000000 	.word	0x20000000
 80002b8:	08000330 	.word	0x08000330
 80002bc:	20000000 	.word	0x20000000
 80002c0:	2000001c 	.word	0x2000001c

080002c4 <ADC_IRQHandler>:
 80002c4:	e7fe      	b.n	80002c4 <ADC_IRQHandler>
	...

080002c8 <__libc_init_array>:
 80002c8:	b570      	push	{r4, r5, r6, lr}
 80002ca:	4d0d      	ldr	r5, [pc, #52]	; (8000300 <__libc_init_array+0x38>)
 80002cc:	4c0d      	ldr	r4, [pc, #52]	; (8000304 <__libc_init_array+0x3c>)
 80002ce:	1b64      	subs	r4, r4, r5
 80002d0:	10a4      	asrs	r4, r4, #2
 80002d2:	2600      	movs	r6, #0
 80002d4:	42a6      	cmp	r6, r4
 80002d6:	d109      	bne.n	80002ec <__libc_init_array+0x24>
 80002d8:	4d0b      	ldr	r5, [pc, #44]	; (8000308 <__libc_init_array+0x40>)
 80002da:	4c0c      	ldr	r4, [pc, #48]	; (800030c <__libc_init_array+0x44>)
 80002dc:	f000 f818 	bl	8000310 <_init>
 80002e0:	1b64      	subs	r4, r4, r5
 80002e2:	10a4      	asrs	r4, r4, #2
 80002e4:	2600      	movs	r6, #0
 80002e6:	42a6      	cmp	r6, r4
 80002e8:	d105      	bne.n	80002f6 <__libc_init_array+0x2e>
 80002ea:	bd70      	pop	{r4, r5, r6, pc}
 80002ec:	f855 3b04 	ldr.w	r3, [r5], #4
 80002f0:	4798      	blx	r3
 80002f2:	3601      	adds	r6, #1
 80002f4:	e7ee      	b.n	80002d4 <__libc_init_array+0xc>
 80002f6:	f855 3b04 	ldr.w	r3, [r5], #4
 80002fa:	4798      	blx	r3
 80002fc:	3601      	adds	r6, #1
 80002fe:	e7f2      	b.n	80002e6 <__libc_init_array+0x1e>
 8000300:	08000328 	.word	0x08000328
 8000304:	08000328 	.word	0x08000328
 8000308:	08000328 	.word	0x08000328
 800030c:	0800032c 	.word	0x0800032c

08000310 <_init>:
 8000310:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000312:	bf00      	nop
 8000314:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000316:	bc08      	pop	{r3}
 8000318:	469e      	mov	lr, r3
 800031a:	4770      	bx	lr

0800031c <_fini>:
 800031c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800031e:	bf00      	nop
 8000320:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000322:	bc08      	pop	{r3}
 8000324:	469e      	mov	lr, r3
 8000326:	4770      	bx	lr
